version: '3.9'
services:

  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   restart: on-failure
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_PORT: 2181
  #     ZOO_SERVERS: server.1=zookeeper:2888:3888
  #     ALLOW_ANONYMOUS_LOGIN: "yes"

  # kafka:
  #   image: bitnami/kafka:latest
  #   restart: on-failure
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
  #     ALLOW_PLAINTEXT_LISTENER: "yes"
  #     KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
  #     KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
  #     KAFKA_RESTART_ATTEMPTS: "10"
  #     KAFKA_RESTART_DELAY: "5"
  #     ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
  #   depends_on:
  #     - zookeeper
  
  rabbit:
    image: rabbitmq:3.10.7-management
    container_name: rabbit-auth
    env_file:
      - Api/Tasks/.env-non-dev
    ports:
      - 15672:15672
      - 5672:5672
    hostname: rabbit
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_running -q"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
  
  authredis:
    image: redis:latest
    container_name: redis-auth
    env_file:
      - Api/AuthService/.env-non-dev
    command: --port 2001
    expose:
      - 2001

  authdb:
    image: postgres:15
    container_name: auth-db
    env_file:
      - Api/AuthService/.env-non-dev
    command: -p 1001
    expose:
      - 1001


  authapp:
    build: 
      context: Api/AuthService
    env_file:
      - Api/AuthService/.env-non-dev
    container_name: auth-app
    ports:
      - 9999:8000
    depends_on:
      - authdb
      - authredis

  emailapp:
    build: 
      context: Api/Tasks
    env_file:
      - Api/Tasks/.env-non-dev
    container_name: email-app
    ports:
      - 8888:8000
    depends_on:
      rabbit:
        condition: service_healthy


  resultredis:
    image: redis:latest
    container_name: redis-results
    env_file:
      - Api/Tasks/.env-non-dev
    command: --port 2002
    expose:
      - 2002