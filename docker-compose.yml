version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  

  rabbit:
    image: rabbitmq:3.10.7-management
    container_name: rabbit-auth
    env_file:
      - Api/auth/.env-non-dev
    ports:
      - 15672:15672
      - 5672:5672
    hostname: rabbit
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_running -q"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
  
  authredis:
    image: redis:latest
    container_name: redis-auth
    env_file:
      - Api/auth/.env-non-dev
    command: --port 2001
    expose:
      - 2000

  authdb:
    image: postgres:15
    container_name: auth-db
    env_file:
      - Api/auth/.env-non-dev
    command: -p 1001
    expose:
      - 1000
  

  authapp:
    build: 
      context: Api/auth
    env_file:
      - Api/auth/.env-non-dev
    container_name: auth-app
    ports:
      - 9999:8000
    depends_on:
      authdb:
        condition: service_started
      authredis:
        condition: service_started
      rabbit:
        condition: service_healthy
      kafka:
        condition: service_started
